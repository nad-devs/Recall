version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: notesai
      POSTGRES_USER: notesai
      POSTGRES_PASSWORD: notesai_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U notesai"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Python Backend Service for Concept Extraction
  concept-extractor:
    build:
      context: .
      dockerfile: Dockerfile.python
    command: uvicorn api.v1.extract_concepts:app --host 0.0.0.0 --port 8000
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - FRONTEND_URL=http://web:3000
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Python Backend Service for Learning Journey Analysis
  journey-analyzer:
    build:
      context: .
      dockerfile: Dockerfile.python
    command: uvicorn api.v1.analyze_journey:app --host 0.0.0.0 --port 8001
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8001:8001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Next.js Frontend Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://notesai:notesai_password@postgres:5432/notesai
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - EXTRACTION_SERVICE_URL=http://concept-extractor:8000/api/v1/extract-concepts
      - JOURNEY_ANALYSIS_URL=http://journey-analyzer:8001/api/v1/analyze-journey
      - BACKEND_URL=http://concept-extractor:8000
      - NEXT_PUBLIC_BACKEND_URL=http://concept-extractor:8000
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      concept-extractor:
        condition: service_healthy
      journey-analyzer:
        condition: service_healthy

volumes:
  postgres_data: 