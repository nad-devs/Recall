// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Category {
  id        String     @id @default(cuid())
  name      String
  parentId  String?
  parent    Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id], onDelete: SetNull)
  children  Category[] @relation("CategoryHierarchy")
  concepts  Concept[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Concept {
  id             String        @id @default(cuid())
  title          String
  summary        String?       @db.Text
  categoryId     String?
  category       Category?     @relation(fields: [categoryId], references: [id])
  needsReview    Boolean       @default(false)
  firstSeen      DateTime      @default(now())
  lastReviewed   DateTime?
  aliases        String?       @db.Text  // Stored as JSON string
  occurrences    Occurrence[]
  codeSnippets   CodeSnippet[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Conversation {
  id           String        @id @default(cuid())
  title        String
  date         DateTime      @default(now())
  rawText      String        @db.Text
  summary      String        @db.Text
  codeSnippets CodeSnippet[]
  occurrences  Occurrence[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Occurrence {
  id             String       @id @default(cuid())
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  conceptId      String
  concept        Concept      @relation(fields: [conceptId], references: [id], onDelete: Cascade)
  notes          String?      @db.Text
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model CodeSnippet {
  id             String       @id @default(cuid())
  language       String
  code           String       @db.Text
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  conceptId      String?
  concept        Concept?     @relation(fields: [conceptId], references: [id], onDelete: SetNull)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
} 